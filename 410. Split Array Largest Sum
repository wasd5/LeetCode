class Solution {
public:
    int splitArray(vector<int>& nums, int m) {
        if(nums.size() == 0) {
            return 0;
        }
        int low = 0;
        int high = INT_MAX;
        while(low < high) {
            int mid = low + (high-low) / 2;
            if(canSplit(nums, mid, m)) {
                if(canSplit(nums, mid-1, m)) {
                    high = mid-1;
                }
                else {
                    return mid;
                }
            }
            else {
                low = mid+1;
            }
        }
        return low;
    }
private:
    bool canSplit(const vector<int>& nums, int mid, int m) {
        int sum = 0;
        for(int num : nums) {
            if(num > mid) {
                return false;
            }
            if(sum <= mid-num) {
                sum += num;
            }
            else {
                sum = num;
                m--;
                if(m == 0) {
                    return false;
                }
            }
        }
        return m >= 0;
    }
};
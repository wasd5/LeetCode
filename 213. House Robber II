class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.size() == 0) {
            return 0;
        }
        if(nums.size() == 1) {
            return nums[0];
        }
        if(nums.size() == 2) {
            return max(nums[0], nums[1]);
        }
        vector<int> dp1(nums.size(), 0);
        dp1[0] = nums[0];
        dp1[1] = max(nums[0], nums[1]);
        /* not robbing the last house */
        for(int i = 2; i < nums.size(); i++) {
            dp1 = max(dp1[i-2] + nums[i], dp1[i-1]);
        }
        int ans = dp1[dp1.size()-2];
        /* rob the last house */
        dp1.back() = nums.back();
        dp1[dp1.size()-2] = nums.back();
        for(int i = dp1.size() - 3; i >= 0; i--) {
            dp1[i] = max(dp1[i+1], nums[i] + dp1[i+2]);
        }
        return max(ans, dp[1]);
    }
};